diff --git a/node_modules/electron-rebuild/lib/src/module-rebuilder.js b/node_modules/electron-rebuild/lib/src/module-rebuilder.js
index 0d78dbe..60ee50d 100644
--- a/node_modules/electron-rebuild/lib/src/module-rebuilder.js
+++ b/node_modules/electron-rebuild/lib/src/module-rebuilder.js
@@ -123,7 +123,7 @@ class ModuleRebuilder {
         await fs.outputFile(this.metaPath, this.metaData);
     }
     async rebuild(cacheKey) {
-        return (await this.findPrebuildifyModule(cacheKey)) ||
+        return
             (await this.findPrebuildInstallModule(cacheKey)) ||
             (await this.rebuildNodeGypModule(cacheKey));
     }
diff --git a/node_modules/electron-rebuild/lib/src/module-walker.js b/node_modules/electron-rebuild/lib/src/module-walker.js
index b36e35c..09c6d03 100644
--- a/node_modules/electron-rebuild/lib/src/module-walker.js
+++ b/node_modules/electron-rebuild/lib/src/module-walker.js
@@ -57,6 +57,7 @@ class ModuleWalker {
             return;
         }
         d('exploring', modulePath);
+
         let childPackageJson;
         try {
             childPackageJson = await (0, read_package_json_1.readPackageJson)(modulePath, true);
diff --git a/node_modules/electron-rebuild/lib/src/rebuild.js b/node_modules/electron-rebuild/lib/src/rebuild.js
index 41e3a3e..3f63287 100644
--- a/node_modules/electron-rebuild/lib/src/rebuild.js
+++ b/node_modules/electron-rebuild/lib/src/rebuild.js
@@ -101,6 +101,7 @@ class Rebuilder {
             await this.moduleWalker.findAllModulesIn(nodeModulesPath);
         }
         for (const modulePath of this.moduleWalker.modulesToRebuild) {
+            await this.rebuildModuleAt(modulePath)
             this.rebuilds.push(() => this.rebuildModuleAt(modulePath));
         }
         this.rebuilds.push(() => this.rebuildModuleAt(this.buildPath));
@@ -117,6 +118,7 @@ class Rebuilder {
         if (!(await fs.pathExists(path.resolve(modulePath, 'binding.gyp')))) {
             return;
         }
+
         const moduleRebuilder = new module_rebuilder_1.ModuleRebuilder(this, modulePath);
         this.lifecycle.emit('module-found', path.basename(modulePath));
         if (!this.force && await moduleRebuilder.alreadyBuiltByRebuild()) {
